knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#install.packages('tinytex')
if (!require("tinytex")) {
install.packages('tinytex')
library(tinytex)
}
# Verificar si la instalación fue exitosa
tinytex:::is_tinytex()
library(readr)
url <- "https://raw.githubusercontent.com/ShinichiKD/analisisExploratorio/main/waze_app_dataset.csv"
waze_app_dataset <- read_csv(url,
col_names = TRUE, col_types = cols(label = col_factor(levels = c("retained",
"churned")), device = col_factor(levels = c("Android",
"iPhone"))), skip = 0)
head(waze_app_dataset)
str(waze_app_dataset)
totalFaltantes<-sum(is.na(waze_app_dataset))
numero_de_filas <- nrow(waze_app_dataset)
porcentaje_faltantes <- (totalFaltantes / numero_de_filas) * 100
summary(waze_app_dataset)
waze_app_dataset_limpios <- na.omit(waze_app_dataset)
summary(waze_app_dataset_limpios)
boxplot(waze_app_dataset_limpios$sessions, main="sessions")
boxplot(waze_app_dataset_limpios$activity_days, main="activity_days")
boxplot(waze_app_dataset_limpios$driven_km_drives, main="driven_km_drives")
adjust_outliers <- function(data, column_name) {
x <- data[[column_name]]
qnt <- quantile(x, probs=c(.25, .75), na.rm = TRUE)
caps <- quantile(x, probs=c(.05, .95), na.rm = TRUE)
H <- 1.5 * IQR(x, na.rm = TRUE)
x[x < (qnt[1] - H)] <- caps[1]
x[x > (qnt[2] + H)] <- caps[2]
data[[column_name]] <- x
return(data)
}
# Ajustar outliers en la columna 'driven_km_drives'
waze_app_dataset_limpios <- adjust_outliers(waze_app_dataset_limpios, "driven_km_drives")
waze_app_dataset_limpios <- adjust_outliers(waze_app_dataset_limpios, "sessions")
boxplot(waze_app_dataset_limpios$driven_km_drives, main="driven_km_drives")
boxplot(waze_app_dataset_limpios$sessions , main="sessions")
library(dplyr)
library(tidyr)
waze_app_dataset_limpios
waze_app_dataset_limpios$driven_km_drives_scaled <- scale(waze_app_dataset_limpios$driven_km_drives)
waze_app_dataset_limpios
# Medidas de tendencia central y dispersión para variables numéricas
waze_app_dataset_limpios %>%
summarise(across(where(is.numeric), list(media = ~mean(.), mediana = ~median(.), desviacion = ~sd(.))))
library(dplyr)
library(tidyr)
# Medidas de tendencia central y dispersión para variables numéricas
waze_app_dataset_limpios %>%
summarise(across(where(is.numeric), list(media = ~mean(.), mediana = ~median(.), desviacion = ~sd(.))))
library(dplyr)
library(tidyr)
# Análisis descriptivo para variables categóricas
summary(factor(waze_app_dataset_limpios$device))
summary(factor(waze_app_dataset_limpios$label))
library(ggplot2)
ggplot(waze_app_dataset_limpios, aes(x=device, y=sessions)) +
geom_boxplot(fill="lightblue", color="darkblue") +
labs(title="Número de Sesiones por Tipo de Dispositivo",
x="Tipo de Dispositivo",
y="Número de Sesiones") +
theme_minimal()
ggplot(waze_app_dataset_limpios, aes(x=driven_km_drives, y=sessions)) +
geom_point(alpha=0.5) +
labs(title="Relación entre Kilómetros Conducidos y Sesiones",
x="Kilómetros Conducidos",
y="Número de Sesiones") +
theme_minimal()
ggplot(waze_app_dataset_limpios, aes(x=activity_days, fill=label)) +
geom_density(alpha=0.5) +
labs(title="Distribución de Días de Actividad por Retención de Usuarios",
x="Días de Actividad",
y="Densidad") +
scale_fill_manual(values=c("red", "green"), labels=c("Churned", "Retained")) +
theme_minimal()
remove.packages("tinytex")
knitr::opts_chunk$set(echo = TRUE)
#install.packages('tinytex')
if (!require("tinytex")) {
install.packages('tinytex')
library(tinytex)
}
# Verificar si la instalación fue exitosa
tinytex:::is_tinytex()
library(readr)
url <- "https://raw.githubusercontent.com/ShinichiKD/analisisExploratorio/main/waze_app_dataset.csv"
waze_app_dataset <- read_csv(url,
col_names = TRUE, col_types = cols(label = col_factor(levels = c("retained",
"churned")), device = col_factor(levels = c("Android",
"iPhone"))), skip = 0)
head(waze_app_dataset)
str(waze_app_dataset)
totalFaltantes<-sum(is.na(waze_app_dataset))
numero_de_filas <- nrow(waze_app_dataset)
porcentaje_faltantes <- (totalFaltantes / numero_de_filas) * 100
summary(waze_app_dataset)
waze_app_dataset_limpios <- na.omit(waze_app_dataset)
summary(waze_app_dataset_limpios)
boxplot(waze_app_dataset_limpios$sessions, main="sessions")
boxplot(waze_app_dataset_limpios$activity_days, main="activity_days")
boxplot(waze_app_dataset_limpios$driven_km_drives, main="driven_km_drives")
adjust_outliers <- function(data, column_name) {
x <- data[[column_name]]
qnt <- quantile(x, probs=c(.25, .75), na.rm = TRUE)
caps <- quantile(x, probs=c(.05, .95), na.rm = TRUE)
H <- 1.5 * IQR(x, na.rm = TRUE)
x[x < (qnt[1] - H)] <- caps[1]
x[x > (qnt[2] + H)] <- caps[2]
data[[column_name]] <- x
return(data)
}
# Ajustar outliers en la columna 'driven_km_drives'
waze_app_dataset_limpios <- adjust_outliers(waze_app_dataset_limpios, "driven_km_drives")
waze_app_dataset_limpios <- adjust_outliers(waze_app_dataset_limpios, "sessions")
boxplot(waze_app_dataset_limpios$driven_km_drives, main="driven_km_drives")
boxplot(waze_app_dataset_limpios$sessions , main="sessions")
library(dplyr)
library(tidyr)
waze_app_dataset_limpios
waze_app_dataset_limpios$driven_km_drives_scaled <- scale(waze_app_dataset_limpios$driven_km_drives)
waze_app_dataset_limpios
# Medidas de tendencia central y dispersión para variables numéricas
waze_app_dataset_limpios %>%
summarise(across(where(is.numeric), list(media = ~mean(.), mediana = ~median(.), desviacion = ~sd(.))))
library(dplyr)
library(tidyr)
# Medidas de tendencia central y dispersión para variables numéricas
waze_app_dataset_limpios %>%
summarise(across(where(is.numeric), list(media = ~mean(.), mediana = ~median(.), desviacion = ~sd(.))))
library(dplyr)
library(tidyr)
# Análisis descriptivo para variables categóricas
summary(factor(waze_app_dataset_limpios$device))
summary(factor(waze_app_dataset_limpios$label))
library(ggplot2)
ggplot(waze_app_dataset_limpios, aes(x=device, y=sessions)) +
geom_boxplot(fill="lightblue", color="darkblue") +
labs(title="Número de Sesiones por Tipo de Dispositivo",
x="Tipo de Dispositivo",
y="Número de Sesiones") +
theme_minimal()
ggplot(waze_app_dataset_limpios, aes(x=driven_km_drives, y=sessions)) +
geom_point(alpha=0.5) +
labs(title="Relación entre Kilómetros Conducidos y Sesiones",
x="Kilómetros Conducidos",
y="Número de Sesiones") +
theme_minimal()
ggplot(waze_app_dataset_limpios, aes(x=activity_days, fill=label)) +
geom_density(alpha=0.5) +
labs(title="Distribución de Días de Actividad por Retención de Usuarios",
x="Días de Actividad",
y="Densidad") +
scale_fill_manual(values=c("red", "green"), labels=c("Churned", "Retained")) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
#install.packages('tinytex')
if (!require("tinytex")) {
install.packages('tinytex')
library(tinytex)
}
# Verificar si la instalación fue exitosa
tinytex:::is_tinytex()
library(readr)
url <- "https://raw.githubusercontent.com/ShinichiKD/analisisExploratorio/main/waze_app_dataset.csv"
waze_app_dataset <- read_csv(url,
col_names = TRUE, col_types = cols(label = col_factor(levels = c("retained",
"churned")), device = col_factor(levels = c("Android",
"iPhone"))), skip = 0)
head(waze_app_dataset)
str(waze_app_dataset)
totalFaltantes<-sum(is.na(waze_app_dataset))
numero_de_filas <- nrow(waze_app_dataset)
porcentaje_faltantes <- (totalFaltantes / numero_de_filas) * 100
summary(waze_app_dataset)
waze_app_dataset_limpios <- na.omit(waze_app_dataset)
summary(waze_app_dataset_limpios)
boxplot(waze_app_dataset_limpios$sessions, main="sessions")
boxplot(waze_app_dataset_limpios$activity_days, main="activity_days")
boxplot(waze_app_dataset_limpios$driven_km_drives, main="driven_km_drives")
adjust_outliers <- function(data, column_name) {
x <- data[[column_name]]
qnt <- quantile(x, probs=c(.25, .75), na.rm = TRUE)
caps <- quantile(x, probs=c(.05, .95), na.rm = TRUE)
H <- 1.5 * IQR(x, na.rm = TRUE)
x[x < (qnt[1] - H)] <- caps[1]
x[x > (qnt[2] + H)] <- caps[2]
data[[column_name]] <- x
return(data)
}
# Ajustar outliers en la columna 'driven_km_drives'
waze_app_dataset_limpios <- adjust_outliers(waze_app_dataset_limpios, "driven_km_drives")
waze_app_dataset_limpios <- adjust_outliers(waze_app_dataset_limpios, "sessions")
boxplot(waze_app_dataset_limpios$driven_km_drives, main="driven_km_drives")
boxplot(waze_app_dataset_limpios$sessions , main="sessions")
library(dplyr)
library(tidyr)
waze_app_dataset_limpios
waze_app_dataset_limpios$driven_km_drives_scaled <- scale(waze_app_dataset_limpios$driven_km_drives)
waze_app_dataset_limpios
# Medidas de tendencia central y dispersión para variables numéricas
waze_app_dataset_limpios %>%
summarise(across(where(is.numeric), list(media = ~mean(.), mediana = ~median(.), desviacion = ~sd(.))))
library(dplyr)
library(tidyr)
# Medidas de tendencia central y dispersión para variables numéricas
waze_app_dataset_limpios %>%
summarise(across(where(is.numeric), list(media = ~mean(.), mediana = ~median(.), desviacion = ~sd(.))))
library(dplyr)
library(tidyr)
# Análisis descriptivo para variables categóricas
summary(factor(waze_app_dataset_limpios$device))
summary(factor(waze_app_dataset_limpios$label))
library(ggplot2)
ggplot(waze_app_dataset_limpios, aes(x=device, y=sessions)) +
geom_boxplot(fill="lightblue", color="darkblue") +
labs(title="Número de Sesiones por Tipo de Dispositivo",
x="Tipo de Dispositivo",
y="Número de Sesiones") +
theme_minimal()
ggplot(waze_app_dataset_limpios, aes(x=driven_km_drives, y=sessions)) +
geom_point(alpha=0.5) +
labs(title="Relación entre Kilómetros Conducidos y Sesiones",
x="Kilómetros Conducidos",
y="Número de Sesiones") +
theme_minimal()
ggplot(waze_app_dataset_limpios, aes(x=activity_days, fill=label)) +
geom_density(alpha=0.5) +
labs(title="Distribución de Días de Actividad por Retención de Usuarios",
x="Días de Actividad",
y="Densidad") +
scale_fill_manual(values=c("red", "green"), labels=c("Churned", "Retained")) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
#install.packages('tinytex')
if (!require("tinytex")) {
install.packages('tinytex')
library(tinytex)
}
# Verificar si la instalación fue exitosa
tinytex:::is_tinytex()
library(readr)
url <- "https://raw.githubusercontent.com/ShinichiKD/analisisExploratorio/main/waze_app_dataset.csv"
waze_app_dataset <- read_csv(url,
col_names = TRUE, col_types = cols(label = col_factor(levels = c("retained",
"churned")), device = col_factor(levels = c("Android",
"iPhone"))), skip = 0)
head(waze_app_dataset)
str(waze_app_dataset)
totalFaltantes<-sum(is.na(waze_app_dataset))
numero_de_filas <- nrow(waze_app_dataset)
porcentaje_faltantes <- (totalFaltantes / numero_de_filas) * 100
summary(waze_app_dataset)
waze_app_dataset_limpios <- na.omit(waze_app_dataset)
summary(waze_app_dataset_limpios)
boxplot(waze_app_dataset_limpios$sessions, main="sessions")
boxplot(waze_app_dataset_limpios$activity_days, main="activity_days")
boxplot(waze_app_dataset_limpios$driven_km_drives, main="driven_km_drives")
adjust_outliers <- function(data, column_name) {
x <- data[[column_name]]
qnt <- quantile(x, probs=c(.25, .75), na.rm = TRUE)
caps <- quantile(x, probs=c(.05, .95), na.rm = TRUE)
H <- 1.5 * IQR(x, na.rm = TRUE)
x[x < (qnt[1] - H)] <- caps[1]
x[x > (qnt[2] + H)] <- caps[2]
data[[column_name]] <- x
return(data)
}
# Ajustar outliers en la columna 'driven_km_drives'
waze_app_dataset_limpios <- adjust_outliers(waze_app_dataset_limpios, "driven_km_drives")
waze_app_dataset_limpios <- adjust_outliers(waze_app_dataset_limpios, "sessions")
boxplot(waze_app_dataset_limpios$driven_km_drives, main="driven_km_drives")
boxplot(waze_app_dataset_limpios$sessions , main="sessions")
library(dplyr)
library(tidyr)
waze_app_dataset_limpios
waze_app_dataset_limpios$driven_km_drives_scaled <- scale(waze_app_dataset_limpios$driven_km_drives)
waze_app_dataset_limpios
# Medidas de tendencia central y dispersión para variables numéricas
waze_app_dataset_limpios %>%
summarise(across(where(is.numeric), list(media = ~mean(.), mediana = ~median(.), desviacion = ~sd(.))))
library(dplyr)
library(tidyr)
# Medidas de tendencia central y dispersión para variables numéricas
waze_app_dataset_limpios %>%
summarise(across(where(is.numeric), list(media = ~mean(.), mediana = ~median(.), desviacion = ~sd(.))))
library(dplyr)
library(tidyr)
# Análisis descriptivo para variables categóricas
summary(factor(waze_app_dataset_limpios$device))
summary(factor(waze_app_dataset_limpios$label))
library(ggplot2)
ggplot(waze_app_dataset_limpios, aes(x=device, y=sessions)) +
geom_boxplot(fill="lightblue", color="darkblue") +
labs(title="Número de Sesiones por Tipo de Dispositivo",
x="Tipo de Dispositivo",
y="Número de Sesiones") +
theme_minimal()
ggplot(waze_app_dataset_limpios, aes(x=driven_km_drives, y=sessions)) +
geom_point(alpha=0.5) +
labs(title="Relación entre Kilómetros Conducidos y Sesiones",
x="Kilómetros Conducidos",
y="Número de Sesiones") +
theme_minimal()
ggplot(waze_app_dataset_limpios, aes(x=activity_days, fill=label)) +
geom_density(alpha=0.5) +
labs(title="Distribución de Días de Actividad por Retención de Usuarios",
x="Días de Actividad",
y="Densidad") +
scale_fill_manual(values=c("red", "green"), labels=c("Churned", "Retained")) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
#install.packages('tinytex')
install.packages('tinytex')
library(tinytex)
library(readr)
url <- "https://raw.githubusercontent.com/ShinichiKD/analisisExploratorio/main/waze_app_dataset.csv"
waze_app_dataset <- read_csv(url,
col_names = TRUE, col_types = cols(label = col_factor(levels = c("retained",
"churned")), device = col_factor(levels = c("Android",
"iPhone"))), skip = 0)
head(waze_app_dataset)
str(waze_app_dataset)
totalFaltantes<-sum(is.na(waze_app_dataset))
numero_de_filas <- nrow(waze_app_dataset)
porcentaje_faltantes <- (totalFaltantes / numero_de_filas) * 100
summary(waze_app_dataset)
waze_app_dataset_limpios <- na.omit(waze_app_dataset)
summary(waze_app_dataset_limpios)
boxplot(waze_app_dataset_limpios$sessions, main="sessions")
boxplot(waze_app_dataset_limpios$activity_days, main="activity_days")
boxplot(waze_app_dataset_limpios$driven_km_drives, main="driven_km_drives")
adjust_outliers <- function(data, column_name) {
x <- data[[column_name]]
qnt <- quantile(x, probs=c(.25, .75), na.rm = TRUE)
caps <- quantile(x, probs=c(.05, .95), na.rm = TRUE)
H <- 1.5 * IQR(x, na.rm = TRUE)
x[x < (qnt[1] - H)] <- caps[1]
x[x > (qnt[2] + H)] <- caps[2]
data[[column_name]] <- x
return(data)
}
# Ajustar outliers en la columna 'driven_km_drives'
waze_app_dataset_limpios <- adjust_outliers(waze_app_dataset_limpios, "driven_km_drives")
waze_app_dataset_limpios <- adjust_outliers(waze_app_dataset_limpios, "sessions")
boxplot(waze_app_dataset_limpios$driven_km_drives, main="driven_km_drives")
boxplot(waze_app_dataset_limpios$sessions , main="sessions")
library(dplyr)
library(tidyr)
waze_app_dataset_limpios
waze_app_dataset_limpios$driven_km_drives_scaled <- scale(waze_app_dataset_limpios$driven_km_drives)
waze_app_dataset_limpios
# Medidas de tendencia central y dispersión para variables numéricas
waze_app_dataset_limpios %>%
summarise(across(where(is.numeric), list(media = ~mean(.), mediana = ~median(.), desviacion = ~sd(.))))
library(dplyr)
library(tidyr)
# Medidas de tendencia central y dispersión para variables numéricas
waze_app_dataset_limpios %>%
summarise(across(where(is.numeric), list(media = ~mean(.), mediana = ~median(.), desviacion = ~sd(.))))
library(dplyr)
library(tidyr)
# Análisis descriptivo para variables categóricas
summary(factor(waze_app_dataset_limpios$device))
summary(factor(waze_app_dataset_limpios$label))
library(ggplot2)
ggplot(waze_app_dataset_limpios, aes(x=device, y=sessions)) +
geom_boxplot(fill="lightblue", color="darkblue") +
labs(title="Número de Sesiones por Tipo de Dispositivo",
x="Tipo de Dispositivo",
y="Número de Sesiones") +
theme_minimal()
ggplot(waze_app_dataset_limpios, aes(x=driven_km_drives, y=sessions)) +
geom_point(alpha=0.5) +
labs(title="Relación entre Kilómetros Conducidos y Sesiones",
x="Kilómetros Conducidos",
y="Número de Sesiones") +
theme_minimal()
install.packages("tinytex")
knitr::opts_chunk$set(echo = TRUE)
#install.packages('tinytex')
library(tinytex)
library(readr)
url <- "https://raw.githubusercontent.com/ShinichiKD/analisisExploratorio/main/waze_app_dataset.csv"
waze_app_dataset <- read_csv(url,
col_names = TRUE, col_types = cols(label = col_factor(levels = c("retained",
"churned")), device = col_factor(levels = c("Android",
"iPhone"))), skip = 0)
head(waze_app_dataset)
str(waze_app_dataset)
totalFaltantes<-sum(is.na(waze_app_dataset))
numero_de_filas <- nrow(waze_app_dataset)
porcentaje_faltantes <- (totalFaltantes / numero_de_filas) * 100
summary(waze_app_dataset)
waze_app_dataset_limpios <- na.omit(waze_app_dataset)
summary(waze_app_dataset_limpios)
boxplot(waze_app_dataset_limpios$sessions, main="sessions")
boxplot(waze_app_dataset_limpios$activity_days, main="activity_days")
boxplot(waze_app_dataset_limpios$driven_km_drives, main="driven_km_drives")
adjust_outliers <- function(data, column_name) {
x <- data[[column_name]]
qnt <- quantile(x, probs=c(.25, .75), na.rm = TRUE)
caps <- quantile(x, probs=c(.05, .95), na.rm = TRUE)
H <- 1.5 * IQR(x, na.rm = TRUE)
x[x < (qnt[1] - H)] <- caps[1]
x[x > (qnt[2] + H)] <- caps[2]
data[[column_name]] <- x
return(data)
}
# Ajustar outliers en la columna 'driven_km_drives'
waze_app_dataset_limpios <- adjust_outliers(waze_app_dataset_limpios, "driven_km_drives")
waze_app_dataset_limpios <- adjust_outliers(waze_app_dataset_limpios, "sessions")
boxplot(waze_app_dataset_limpios$driven_km_drives, main="driven_km_drives")
boxplot(waze_app_dataset_limpios$sessions , main="sessions")
library(dplyr)
library(tidyr)
waze_app_dataset_limpios
waze_app_dataset_limpios$driven_km_drives_scaled <- scale(waze_app_dataset_limpios$driven_km_drives)
waze_app_dataset_limpios
# Medidas de tendencia central y dispersión para variables numéricas
waze_app_dataset_limpios %>%
summarise(across(where(is.numeric), list(media = ~mean(.), mediana = ~median(.), desviacion = ~sd(.))))
library(dplyr)
library(tidyr)
# Medidas de tendencia central y dispersión para variables numéricas
waze_app_dataset_limpios %>%
summarise(across(where(is.numeric), list(media = ~mean(.), mediana = ~median(.), desviacion = ~sd(.))))
library(dplyr)
library(tidyr)
# Análisis descriptivo para variables categóricas
summary(factor(waze_app_dataset_limpios$device))
summary(factor(waze_app_dataset_limpios$label))
library(ggplot2)
ggplot(waze_app_dataset_limpios, aes(x=device, y=sessions)) +
geom_boxplot(fill="lightblue", color="darkblue") +
labs(title="Número de Sesiones por Tipo de Dispositivo",
x="Tipo de Dispositivo",
y="Número de Sesiones") +
theme_minimal()
ggplot(waze_app_dataset_limpios, aes(x=driven_km_drives, y=sessions)) +
geom_point(alpha=0.5) +
labs(title="Relación entre Kilómetros Conducidos y Sesiones",
x="Kilómetros Conducidos",
y="Número de Sesiones") +
theme_minimal()
ggplot(waze_app_dataset_limpios, aes(x=activity_days, fill=label)) +
geom_density(alpha=0.5) +
labs(title="Distribución de Días de Actividad por Retención de Usuarios",
x="Días de Actividad",
y="Densidad") +
scale_fill_manual(values=c("red", "green"), labels=c("Churned", "Retained")) +
theme_minimal()
tinytex::install_tinytex()
